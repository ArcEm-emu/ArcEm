; Generated by gcc 2.95.4 20010319 (prerelease) [gccsdk 20010912] for ARM/RISC OS
__r0	RN	0
__r1	RN	1
__r2	RN	2
__r3	RN	3
__r4	RN	4
__r5	RN	5
__r6	RN	6
__r7	RN	7
__r8	RN	8
__r9	RN	9
__r10	RN	10
__r11	RN	11
__r12	RN	12
__r13	RN	13
__r14	RN	14
__r15	RN	15
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY
|gcc2_compiled.|
	ALIGN
	EXPORT	|GetDPRegRHS|
|GetDPRegRHS|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 0, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	stmfd	__sp!, {__v1, __v2, __lr}
	mov	__v1, __a2
	and	__lr, __v1, #15 ; RHS Register
	tst	__v1, #16  	; Is shift amount in register?

	beq	|L..4|

	ldr	__a3, |L..50|
	ldr	__ip, [__a3, #68]
	add	__a1, __ip, #4
	str	__a1, [__a3, #68] ; increase PC

	cmp	__lr, #15
	ldr	__ip, [__a3, #476]
	mov	__v2, __a3
	orr	__ip, __ip, #2    ; increase Cycle count
	str	__ip, [__a3, #476]
	bne	|L..5|
	add	__a3, __v2, #424

	ldmia	__a3, {__a2, __a3, __a4, __ip, __lr}

	mov	__a3, __a3, asl #30
	orr	__a3, __a3, __a2, asl #31
	orr	__a3, __a3, __a4, asl #29
	orr	__ip, __a3, __a3, asl #28

	bic	__a4, __a1, #-67108861
	orr	__ip, __ip, __lr, asl #26
	ldr	__a3, [__v2, #448]
	orr	__ip, __ip, __a4
	orr	__lr, __ip, __a3

	b	|L..6|
|L..5|
	add	__ip, __v2, #8
	ldr	__lr, [__ip, __lr, asl #2]
|L..6|
	mov	__a3, #0
	str	__a3, [__v2, #1168]
	ldr	__ip, [__v2, #472]
	mov	__a3, __v1, lsr #6
	add	__ip, __ip, #1
	str	__ip, [__v2, #472]
	and	__a3, __a3, #60
	add	__a4, __v2, #8
	mov	__ip, __v1, asl #25
	mov	__ip, __ip, lsr #30
	ldrb	__a1, [__a4, __a3]	; zero_extendqisi2
	ldr	__pc, [__pc, __ip, asl #2]
	nop
|L..27|
	DCD	|L..9|
	DCD	|L..14|
	DCD	|L..19|
	DCD	|L..24|

|L..9|
	cmp	__a1, #0
	moveq	__a1, __lr
	ldmeqfd	__sp!, {__v1, __v2, __pc}^
	cmp	__a1, #31
	movhi	__a1, #0
	movls	__a1, __lr, asl __a1
	ldmfd	__sp!, {__v1, __v2, __pc}^

|L..14|
	cmp	__a1, #0
	moveq	__a1, __lr
	ldmeqfd	__sp!, {__v1, __v2, __pc}^
	cmp	__a1, #31
	movls	__a1, __lr, lsr __a1
	movhi	__a1, #0
	ldmfd	__sp!, {__v1, __v2, __pc}^

|L..19|
	cmp	__a1, #0
	moveq	__a1, __lr
	ldmeqfd	__sp!, {__v1, __v2, __pc}^
	cmp	__a1, #31
	movhi	__a1, __lr, asr #31
	movls	__a1, __lr, asr __a1
	ldmfd	__sp!, {__v1, __v2, __pc}^

|L..24|
	ands	__a1, __a1, #31
	moveq	__a1, __lr
	movne	__a1, __lr, ror __a1
	ldmfd	__sp!, {__v1, __v2, __pc}^
;|L..8|
;	b	|L..29|
|L..4|
	cmp	__lr, #15
	bne	|L..30|
	ldr	__a4, |L..50|

	add	__a3, __a4, #424

	ldmia	__a3, { __a1, __a2, __a3, __ip, __lr}

	mov	__v2, __a4

	mov	__a2, __a2, asl #30
	orr	__a2, __a2, __a1, asl #31
	orr	__a2, __a2, __a3, asl #29
	orr	__ip, __a2, __ip, asl #28

	ldr	__a3, [__a4, #68]
	orr	__ip, __ip, __lr, asl #26
	ldr	__a2, [__a4, #448]
	bic	__a3, __a3, #-67108861
	orr	__ip, __ip, __a3
	orr	__lr, __ip, __a2
	b	|L..31|
|L..30|
	ldr	__ip, |L..50|
	mov	__v2, __ip
	add	__ip, __ip, #8
	ldr	__lr, [__ip, __lr, asl #2]
|L..31|
	mov	__a3, __v1, asl #20
	mov	__a1, __a3, lsr #27
	mov	__ip, __v1, asl #25
	mov	__ip, __ip, lsr #30
	ldr	__pc, [__pc, __ip, asl #2]
	nop
|L..43|
	DCD	|L..12|
	DCD	|L..34|
	DCD	|L..37|
	DCD	|L..40|

|L..12|
	mov	__a1, __lr, asl __a1
	ldmfd	__sp!, {__v1, __v2, __pc}^

|L..34|
	cmp	__a1, #0
	movne	__a1, __lr, lsr __a1
	ldmfd	__sp!, {__v1, __v2, __pc}^

|L..37|
	cmp	__a1, #0
	moveq	__a1, __lr, asr #31
	movne	__a1, __lr, asr __a1
	ldmfd	__sp!, {__v1, __v2, __pc}^

|L..40|
	cmp	__a1, #0
	movne	__a1, __lr, ror __a1
	ldmnefd	__sp!, {__v1, __v2, __pc}^
	ldr	__ip, [__v2, #432]
	mov	__a1, __lr, lsr #1
	orr	__a1, __a1, __ip, asl #31
	ldmfd	__sp!, {__v1, __v2, __pc}^
|L..50|
	DCD	|statestr|
	ALIGN
	EXPORT	|GetDPSRegRHS|
|GetDPSRegRHS|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 0, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	stmfd	__sp!, {__v1, __v2, __lr}
	mov	__v1, __a2
	and	__lr, __v1, #15
	tst	__v1, #16
	beq	|L..53|
	ldr	__a3, |L..106|
	ldr	__ip, [__a3, #68]
	add	__a1, __ip, #4
	str	__a1, [__a3, #68]
	cmp	__lr, #15
	ldr	__ip, [__a3, #476]
	mov	__v2, __a3
	orr	__ip, __ip, #2
	str	__ip, [__a3, #476]
	bne	|L..54|

	add	__a3, __v2, #424
	ldmia	__a3, {__a3, __ip}	; phole ldm
	ldr	__a4, [__v2, #432]
	ldr	__a2, [__v2, #436]

	mov	__ip, __ip, asl #30
	orr	__ip, __ip, __a3, asl #31
	orr	__ip, __ip, __a4, asl #29
	orr	__ip, __ip, __a2, asl #28
	ldr	__a3, [__v2, #440]
	bic	__a4, __a1, #-67108861
	orr	__ip, __ip, __a3, asl #26
	ldr	__a3, [__v2, #448]
	orr	__ip, __ip, __a4
	orr	__lr, __ip, __a3
	b	|L..55|
|L..54|
	add	__ip, __v2, #8
	ldr	__lr, [__ip, __lr, asl #2]
|L..55|
	mov	__a3, #0
	str	__a3, [__v2, #1168]
	ldr	__ip, [__v2, #472]
	mov	__a3, __v1, lsr #6
	add	__ip, __ip, #1
	str	__ip, [__v2, #472]
	and	__a3, __a3, #60
	add	__a4, __v2, #8
	mov	__ip, __v1, asl #25
	mov	__ip, __ip, lsr #30
	ldrb	__a3, [__a4, __a3]	; zero_extendqisi2
	ldr	__pc, [__pc, __ip, asl #2]
	nop
|L..81|
	DCD	|L..58|
	DCD	|L..65|
	DCD	|L..72|
	DCD	|L..77|
|L..58|
	cmp	__a3, #0
	bne	|L..59|
|L..59|
	cmp	__a3, #32
	moveq	__a1, #0
	andeq	__ip, __lr, #1
	streq	__ip, [__v2, #432]
	ldmeqfd	__sp!, {__v1, __v2, __pc}^
|L..61|
	bls	|L..63|
|L..101|
	mov	__ip, #0
	mov	__a1, __ip
	str	__ip, [__v2, #432]
	ldmfd	__sp!, {__v1, __v2, __pc}^
|L..63|
	mov	__a1, __lr, asl __a3
	rsb	__ip, __a3, #32
|L..102|
	mov	__ip, __lr, lsr __ip
|L..104|
	and	__ip, __ip, #1
	str	__ip, [__v2, #432]
	ldmfd	__sp!, {__v1, __v2, __pc}^
|L..65|
	cmp	__a3, #0
	moveq	__a1, __lr
	ldmeqfd	__sp!, {__v1, __v2, __pc}^
	cmp	__a3, #32
	bne	|L..68|
|L..105|
	mov	__a1, #0
|L..103|
	mov	__ip, __lr, lsr #31
	str	__ip, [__v2, #432]
	ldmfd	__sp!, {__v1, __v2, __pc}^
|L..68|
	bhi	|L..101|
	mov	__a1, __lr, lsr __a3
	sub	__ip, __a3, #1
	b	|L..102|
|L..72|
	cmp	__a3, #0
	moveq	__a1, __lr
	ldmeqfd	__sp!, {__v1, __v2, __pc}^
	cmp	__a3, #31
	mov	__a1, __lr, asr #31
	bhi	|L..103|
	mov	__a1, __lr, asr __a3
	sub	__ip, __a3, #1
	mov	__ip, __lr, asr __ip
	b	|L..104|
|L..77|
	cmp	__a3, #0
	moveq	__a1, __lr
	ldmeqfd	__sp!, {__v1, __v2, __pc}^
	ands	__a3, __a3, #31
	mov	__a1, __lr
	beq	|L..103|
	mov	__a1, __lr, ror __a3
	sub	__ip, __a3, #1
	b	|L..102|
|L..53|
	cmp	__lr, #15
	bne	|L..84|
	ldr	__a4, |L..106|
	add	__a3, __a4, #424
	ldmia	__a3, {__a3, __ip}	; phole ldm
	ldr	__a2, [__a4, #432]
	ldr	__a1, [__a4, #436]
	mov	__v2, __a4
	ldr	__lr, [__a4, #440]
	mov	__ip, __ip, asl #30
	orr	__ip, __ip, __a3, asl #31
	orr	__ip, __ip, __a2, asl #29
	orr	__ip, __ip, __a1, asl #28
	ldr	__a3, [__a4, #68]
	orr	__ip, __ip, __lr, asl #26
	ldr	__a2, [__a4, #448]
	bic	__a3, __a3, #-67108861
	orr	__ip, __ip, __a3
	orr	__lr, __ip, __a2
	b	|L..85|
|L..84|
	ldr	__ip, |L..106|
	mov	__v2, __ip
	add	__ip, __ip, #8
	ldr	__lr, [__ip, __lr, asl #2]
|L..85|
	mov	__a3, __v1, asl #20
	mov	__a3, __a3, lsr #27
	mov	__ip, __v1, asl #25
	mov	__ip, __ip, lsr #30
	ldr	__pc, [__pc, __ip, asl #2]
	nop
|L..97|
	DCD	|L..63|
	DCD	|L..88|
	DCD	|L..91|
	DCD	|L..94|
|L..88|
	cmp	__a3, #0
	beq	|L..105|
	mov	__a1, __lr, lsr __a3
	sub	__ip, __a3, #1
	b	|L..102|
|L..91|
	cmp	__a3, #0
	mov	__a1, __lr, asr #31
	beq	|L..103|
	mov	__a1, __lr, asr __a3
	sub	__ip, __a3, #1
	mov	__ip, __lr, asr __ip
	b	|L..104|
|L..94|
	cmp	__a3, #0
	bne	|L..95|
	and	__ip, __lr, #1
	ldr	__a3, [__v2, #432]
	mov	__a1, __lr, lsr #1
	str	__ip, [__v2, #432]
	orr	__a1, __a1, __a3, asl #31
	ldmfd	__sp!, {__v1, __v2, __pc}^
|L..95|
	mov	__a1, __lr, ror __a3
	sub	__ip, __a3, #1
	b	|L..102|
|L..106|
	DCD	|statestr|
